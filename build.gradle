plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.0.0'
    id 'pl.allegro.tech.build.axion-release' version '1.10.0'
}

repositories {
    mavenCentral()
}

group = 'com.github.nickmcdowall'
sourceCompatibility = '11'
project.version = scmVersion.version


ext {
    junitJupiter = '5.6.0'
    junitPlatformVersion = '1.3.2'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.12'
    implementation 'com.github.nickmcdowall:yatspec:2021.1.1'
    implementation 'org.springframework:spring-web:5.1.11.RELEASE'
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompileOnly 'org.springframework:spring-web:5.1.11.RELEASE'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-api:$junitJupiter"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-params:$junitJupiter"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiter"
    testImplementation 'org.assertj:assertj-core:3.15.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.3.3'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

    implementation 'org.springframework:spring-context:5.2.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:2.2.7.RELEASE'
    implementation 'org.springframework.boot:spring-boot-test:2.2.7.RELEASE'
    implementation 'jakarta.annotation:jakarta.annotation-api:1.3.5'
    implementation 'com.squareup.okhttp3:okhttp:3.4.2'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:2.2.3.RELEASE'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
    implementation 'org.springframework:spring-webmvc:5.2.5.RELEASE'
    implementation 'org.apache.tomcat.embed:tomcat-embed-core:9.0.33'
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'com.j2html:j2html:1.4.0'

    // JSON & XML pretty formatting
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.dom4j:dom4j:2.1.3'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

wrapper {
    gradleVersion = "6.8.3"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "$group"
            artifactId = 'yatspec-lsd-interceptors'
            version = "${scmVersion.version}"

            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'yatspec-lsd-interceptors'
                description = 'A library used to capture http interactions to be used with yatspec lsd for living sequence diagrams'
                url = 'https://github.com/nickmcdowall/yatspec-lsd-interceptors.git'
                licenses {
                    license {
                        name = "The Apache Software License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        distribution = "repo"
                    }
                }
                developers {
                    developer {
                        name = "Nick"
                        email = "nicholas.mcdowall@gmail.com"
                        organization = 'NKM IT Solutions'
                        organizationUrl = 'https://github.com/nickmcdowall'
                    }
                }
                scm {
                    url = "https://github.com/nickmcdowall/yatspec-lsd-interceptors.git"
                }
            }
            repositories {
                maven {
                    name = 'sonatype'
                    url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                    credentials(PasswordCredentials)
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {  
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
