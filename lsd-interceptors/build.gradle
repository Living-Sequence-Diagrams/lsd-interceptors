plugins {
    id 'java-library'
    id 'java'
    id 'jacoco'
    id 'org.jetbrains.kotlin.jvm'
}

repositories {
    mavenCentral()
    mavenLocal()
}

kotlin {
    jvmToolchain(11)
}

dependencies {
    implementation 'org.springframework:spring-web:5.3.16.RELEASE'
    implementation 'org.springframework:spring-messaging:5.3.23'
    implementation 'org.springframework.integration:spring-integration-core:6.1.4'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    testCompileOnly 'org.springframework:spring-web:5.1.11.RELEASE'
    
    implementation 'org.springframework:spring-context:5.3.16.RELEASE'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:3.1.5'
    implementation 'org.springframework.boot:spring-boot-test:3.1.5'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'com.squareup.okhttp3:okhttp:3.4.2'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    implementation 'org.springframework:spring-webmvc:5.3.16'
    implementation 'org.apache.tomcat.embed:tomcat-embed-core:9.0.33'
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'com.j2html:j2html:1.6.0'
    implementation 'org.springframework.data:spring-data-commons:3.1.5'

    implementation 'org.springframework.amqp:spring-amqp:3.0.10'
    implementation 'org.springframework.amqp:spring-rabbit:3.0.10'

}

jacocoTestReport {
    reports {
        xml.enabled(true)
        html.enabled(true)
        html.setDestination(project.provider(() -> new File("${project.buildDir}/reports/coverage")))
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
    finalizedBy jacocoTestReport
}
